{
 "import": {
    "prefix": "im",
    "body": "import ${1:package/module}$0",
    "description": "import a package or module"
  },
  "from ... import ...": {
    "prefix": "fim",
    "body": "from ${1:package/module} import ${2:names}$0",
    "description": "import statement that allows individual objects from the module to be imported directly into the callerâ€™s symbol table."
  },
 "new method": {
    "prefix": "defs",
    "body": "def ${1:mname}(self, ${2:arg}):\n\t${3:pass}$0",
    "description": "code snippet for a class method definition."
  },
  "new method w/ return": {
    "prefix": "defst",
    "body": "def ${1:mname}(self, ${2:arg}) -> ${3:return_type}:\n\t${4:pass}$0",
    "description": "code snippet for a class method definition."
  },
  "new function": {
    "prefix": "def",
    "body": "def ${1:fname}(${2:arg}):\n\t${3:pass}$0",
    "description": "code snippet for function definition."
  },
  "new function w/ return": {
    "prefix": "deft",
    "body": "def ${1:fname}(${2:arg}) -> ${3:return_type}:\n\t${4:pass}$0",
    "description": "code snippet for function definition."
  },
  "new async function": {
    "prefix": "adef",
    "body": "async def ${1:fname}(${2:arg}):\n\t${3:pass}$0",
    "description": "code snippet for async function definition."
  },
 "if": {
    "prefix": "if",
    "body": "if ${1:condition}:\n\t${2:pass}$0",
    "description": "code snippet for the if statement."
  },
  "if/else": {
    "prefix": "if/else",
    "body": ["if ${1:condition}:", "\t${2:pass}", "else:", "\t${3:pass}"],
    "description": "code snippet for an if statement with else"
  },
  "elif": {
    "prefix": "elif",
    "body": ["elif ${1:expression}:", "\t${2:pass}"],
    "description": "code snippet for an elif"
  },
  "else": {
    "prefix": "else",
    "body": ["else:", "\t${1:pass}"],
    "description": "code snippet for an else"
  },
  "for": {
    "prefix": "for",
    "body": "for ${1:value} in ${2:iterable}:\n\t${3:pass}$0",
    "description": "code snippet to create a for loop structure."
  },
  "for/else": {
    "prefix": "for/else",
    "body": [
      "for ${1:target_list} in ${2:expression_list}:",
      "\t${3:pass}",
      "else:",
      "\t${4:pass}"
    ],
    "description": "code snippet for a for loop with else"
  },
  "while": {
    "prefix": "while",
    "body": "while ${1:condition}:\n\t${2:pass}$0",
    "description": "code snippet to create a while loop structure."
  },
  "while/else": {
    "prefix": "while/else",
    "body": ["while ${1:expression}:", "\t${2:pass}", "else:", "\t${3:pass}"],
    "description": "code snippet for a while loop with else"
  },

